name: Customizer

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  sysinfo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt full-upgrade -y
        sudo apt-get install -y neofetch nodejs npm unzip expect jq
        echo "#### Updated System ####"

    - name: Run Neofetch
      run: neofetch

    - name: Install Ngrok
      run: |
       curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc \ | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
       echo "deb https://ngrok-agent.s3.amazonaws.com buster main" \ | sudo tee /etc/apt/sources.list.d/ngrok.list
       sudo apt update
       sudo apt install -y ngrok
        echo "#### new method install ####"
        echo " "

        # sudo apt update
        # sudo apt install snapd -y
        # sudo snap install ngrok

        echo " "
        echo "#### nGrok Installed ####"

    - name: Add ngrok auth token
      env:
       NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: ngrok config add-authtoken "$NGROK_AUTH_TOKEN"
    

    - name: Install Server
      run: |
        git clone https://github.com/redhat-developer/red-hat-developer-hub-customization-provider.git
        ls
        cd red-hat-developer-hub-customization-provider
        ls
        npm install
        npm start

    - name: Start Ngrok
      run: |
         echo "#### Starting ngrok... ####"
         echo " "
         # ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}  
         nohup ngrok http 3000 --host-header=localhost > ngrok.log 2>&1 &
         echo "Sleeping 10s to allow Ngrok tunnel to initialize..."
         sleep 10
         echo "#### Dumping Ngrok log ####"
         echo " "
         cat ngrok.log
         echo " "
         echo "#### Startup Completed ####"